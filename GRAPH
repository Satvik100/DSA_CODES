#include <bits/stdc++.h>
#include <iostream>
using namespace std;
int a[101][101];
int n;

bool dfs(int i, int parent, bool *visited){
    
    visited[i] = true;
    
    for(int j=1;j<=n;j++){  
      if(a[i][j]==1){
          if(!visited[j]){
              if(dfs(j,i,visited))
 		 return true;
          }
          else if(j!=parent)
              return true;
      }
    }
    return false;  
}

bool checkcycle(bool *visited){
    
    for(int i = 1;i<=n;i++){
        if(!visited[i]){
            if(dfs (i,-1,visited))
                return true;
        }
        return false;
    }
}


int main()
{
    int t;
    cin>>n>>t;
    
    bool visited[n]={0};
    for(int i =1;i<=n;i++){
        for(int j=1;j<=n;j++){
            a[i][j] = 0;   
        }
    }
    
    int x,y;
    while(t--){
        cin>>x>>y;
        a[x][y] = 1;
        a[y][x] = 1;
    }
    
	cout<<checkcycle(visited)<<endl;
	return 0;
}
